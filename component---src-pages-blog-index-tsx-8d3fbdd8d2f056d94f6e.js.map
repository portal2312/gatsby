{"version":3,"file":"component---src-pages-blog-index-tsx-8d3fbdd8d2f056d94f6e.js","mappings":"sKAGWA,EAAc,sCACdC,EAAc,sCC+CzB,MAhCsCC,IAA8B,IAAD,QAA5B,UAAEC,EAAS,SAAEC,GAAU,EAC5D,MAAMC,GAAOC,EAAAA,EAAAA,KACb,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UDrBc,mCCsBjBD,EAAAA,cAAAA,SAAAA,CAAQC,UDjBS,oCCiBuB,QAAX,EAAEH,EAAKI,YAAI,OAAc,QAAd,EAATC,EAAWC,oBAAY,WAAd,EAATC,EAAyBC,OACxDN,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UDpBU,mCCqBZD,EAAAA,cAAAA,KAAAA,CAAIC,UAAWR,GACbO,EAAAA,cAACO,EAAAA,KAAI,CAACN,UAAWP,EAAac,GAAG,KAAI,SAIvCR,EAAAA,cAAAA,KAAAA,CAAIC,UAAWR,GACbO,EAAAA,cAACO,EAAAA,KAAI,CAACN,UAAWP,EAAac,GAAG,UAAS,UAI5CR,EAAAA,cAAAA,KAAAA,CAAIC,UAAWR,GACbO,EAAAA,cAACO,EAAAA,KAAI,CAACN,UAAWP,EAAac,GAAG,SAAQ,WAM/CR,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UD1CS,iCC0CYL,GACxBC,GAEC,C,6CC9BV,IATgCF,IAAgB,IAAD,QAAd,MAAEW,GAAO,EACxC,MAAMR,GAAOW,EAAAA,EAAAA,KACb,OACET,EAAAA,cAAAA,QAAAA,KACGM,EAAM,MAAIR,SAAU,QAAN,EAAJA,EAAMI,YAAI,OAAc,QAAd,EAAVC,EAAYC,oBAAY,WAApB,EAAJC,EAA0BC,MAC/B,C,qCCEZ,IAbwB,KAEfI,EAAAA,EAAAA,gBAAe,a,2GCGxB,MAAMJ,EAAQ,gBAyCDK,EAAO,IAAMX,EAAAA,cAACY,EAAAA,EAAG,CAACN,MAAOA,IAEtC,UAzCiBX,IAA8C,IAA7C,KAAEG,GAAsC,EACxD,OACEE,EAAAA,cAACa,EAAAA,EAAM,CAACjB,UAAWU,GAChBR,EAAKgB,OAAOC,MAAMC,KAAKC,IAAI,iBAC1BjB,EAAAA,cAAAA,UAAAA,CAASkB,IAAKD,EAAKE,IACjBnB,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACO,EAAAA,KAAI,CAACC,GAAK,SAAwB,QAAlB,EAAES,EAAKG,mBAAW,aAAhBC,EAAkBC,QAClB,QADyB,EACzCL,EAAKG,mBAAW,aAAhBG,EAAkBjB,QAGvBN,EAAAA,cAAAA,IAAAA,KAAG,WAAyB,QAAjB,EAACiB,EAAKG,mBAAW,aAAhBI,EAAkBC,MAC9BzB,EAAAA,cAAAA,IAAAA,KAAIiB,EAAKS,SACD,IAEL,C","sources":["webpack://gatsby/./src/components/layout.module.css","webpack://gatsby/./src/components/layout.tsx","webpack://gatsby/./src/components/seo.tsx","webpack://gatsby/./src/hooks/useSiteMetadata.ts","webpack://gatsby/./src/pages/blog/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navLinkItem = \"layout-module--nav-link-item--a5f0a\";\nexport var navLinkText = \"layout-module--nav-link-text--69cda\";\nexport var navLinks = \"layout-module--nav-links--1113b\";\nexport var siteTitle = \"layout-module--site-title--e4dea\";","import * as React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\nimport {\n  container,\n  heading,\n  navLinkItem,\n  navLinkText,\n  navLinks,\n  siteTitle,\n} from \"./layout.module.css\";\n\ninterface LayoutProps {\n  pageTitle?: string | null;\n  children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ pageTitle, children }) => {\n  const data = useSiteMetadata();\n  return (\n    <div className={container}>\n      <header className={siteTitle}>{data.site?.siteMetadata?.title}</header>\n      <nav>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link className={navLinkText} to=\"/\">\n              Home\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link className={navLinkText} to=\"/about\">\n              About\n            </Link>\n          </li>\n          <li className={navLinkItem}>\n            <Link className={navLinkText} to=\"/blog\">\n              Blog\n            </Link>\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import * as React from \"react\";\n\nimport useSiteMetaData from \"../hooks/useSiteMetadata\";\n\ninterface SeoProps {\n  title?: string | null;\n}\n\nconst Seo: React.FC<SeoProps> = ({ title }) => {\n  const data = useSiteMetaData();\n  return (\n    <title>\n      {title} | {data?.site?.siteMetadata?.title}\n    </title>\n  );\n};\n\nexport default Seo;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useSiteMetadata = (): Queries.SiteMetaTitleQuery => {\n  // https://www.gatsbyjs.com/docs/how-to/local-development/graphql-typegen/#using-the-autogenerated-queries-types\n  return useStaticQuery(graphql`\n    query SiteMetaTitle {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n};\n\nexport default useSiteMetadata;\n","import * as React from \"react\";\n\nimport { Link, PageProps, graphql } from \"gatsby\";\n\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\n\nconst title = \"My Blog Posts\";\n\nconst BlogPage = ({ data }: PageProps<Queries.allMdxQuery>) => {\n  return (\n    <Layout pageTitle={title}>\n      {data.allMdx.nodes.map((node) => (\n        <article key={node.id}>\n          <h2>\n            <Link to={`/blog/${node.frontmatter?.slug}`}>\n              {node.frontmatter?.title}\n            </Link>\n          </h2>\n          <p>Posted: {node.frontmatter?.date}</p>\n          <p>{node.excerpt}</p>\n        </article>\n      ))}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query allMdx {\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n          slug\n        }\n        id\n        excerpt\n        parent {\n          ... on File {\n            modifiedTime(formatString: \"MMMM D, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title={title} />;\n\nexport default BlogPage;\n"],"names":["navLinkItem","navLinkText","_ref","pageTitle","children","data","useSiteMetadata","React","className","site","_data$site","siteMetadata","_data$site$siteMetada","title","Link","to","useSiteMetaData","useStaticQuery","Head","Seo","Layout","allMdx","nodes","map","node","key","id","frontmatter","_node$frontmatter","slug","_node$frontmatter2","_node$frontmatter3","date","excerpt"],"sourceRoot":""}